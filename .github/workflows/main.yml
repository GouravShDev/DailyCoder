name: Flutter APK Build

on:
  push:
    branches:
      - main  # Replace with the branch you want to trigger the build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use 'temurin' or 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'  # Specify Flutter version 3.24.3

      - name: Install dependencies
        run: flutter pub get

      - name: Create google-services.json
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: |
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 --decode > android/app/google-services.json

      - name: Generate firebase_options.dart
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        run: |
          mkdir -p lib
          echo "// File generated by GitHub Actions." > lib/firebase_options.dart
          echo "// ignore_for_file: type=lint" >> lib/firebase_options.dart
          echo "import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;" >> lib/firebase_options.dart
          echo "import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;" >> lib/firebase_options.dart
          echo "" >> lib/firebase_options.dart
          echo "class DefaultFirebaseOptions {" >> lib/firebase_options.dart
          echo "  static FirebaseOptions get currentPlatform {" >> lib/firebase_options.dart
          echo "    if (kIsWeb) {" >> lib/firebase_options.dart
          echo "      throw UnsupportedError('Web not supported in this configuration');" >> lib/firebase_options.dart
          echo "    }" >> lib/firebase_options.dart
          echo "    switch (defaultTargetPlatform) {" >> lib/firebase_options.dart
          echo "      case TargetPlatform.android:" >> lib/firebase_options.dart
          echo "        return android;" >> lib/firebase_options.dart
          echo "      default:" >> lib/firebase_options.dart
          echo "        throw UnsupportedError('Platform not supported');" >> lib/firebase_options.dart
          echo "    }" >> lib/firebase_options.dart
          echo "  }" >> lib/firebase_options.dart
          echo "" >> lib/firebase_options.dart
          echo "  static const FirebaseOptions android = FirebaseOptions(" >> lib/firebase_options.dart
          echo "    apiKey: '${{ secrets.FIREBASE_API_KEY }}'," >> lib/firebase_options.dart
          echo "    appId: '${{ secrets.FIREBASE_APP_ID }}'," >> lib/firebase_options.dart
          echo "    messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> lib/firebase_options.dart
          echo "    projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> lib/firebase_options.dart
          echo "    storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> lib/firebase_options.dart
          echo "  );" >> lib/firebase_options.dart
          echo "}" >> lib/firebase_options.dart

      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs
        
      - name: Build APK
        run: flutter build apk --release

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          # override default build-tools version (33.0.0) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
